#!/usr/bin/python3
# -*- coding: utf-8 -*-

# Copyright Â© 2013 Martin Ueding <dev@martin-ueding.de>
# Licensed under The GNU Public License Version 2 (or later)

import numpy as np
import scipy.optimize as op

__docformat__ = "restructuredtext en"

def main():
    x = np.linspace(0, 10, 10)
    y = 2 * x + 3
    random = np.random.normal(size=x.shape) / 10
    y += random
    y_err = np.random.normal(size=x.shape) / 10

    np.savetxt("data.txt", np.column_stack([x, y, y_err]))
    np.savetxt("data2.txt", np.column_stack([x, y, 2*y_err]))

    def linear(x, a, b):
        return a * x + b

    print("Mit normalen Fehler:")
    popt, pconv = op.curve_fit(linear, x, y, sigma=y_err)
    print("Parameter:", popt)
    print("Fehler:  ", np.sqrt(pconv.diagonal()))
    print()

    print("Mit doppeltem Fehler:")
    popt, pconv = op.curve_fit(linear, x, y, sigma=2*y_err)
    print("Parameter:", popt)
    print("Fehler:  ", np.sqrt(pconv.diagonal()))

if __name__ == "__main__":
    main()
